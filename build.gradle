/*
 * Copyright (C) by MinterTeam. 2020
 * @link <a href="https://github.com/MinterTeam">Org Github</a>
 * @link <a href="https://github.com/edwardstock">Maintainer Github</a>
 *
 * The MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

buildscript {
    repositories {
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
        maven { url "https://dl.bintray.com/ethereum/maven/" }
        maven { url 'https://clojars.org/repo/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://dl.bintray.com/minterteam/android' }
        maven { url "https://repo1.maven.org/maven2/com/google/zxing/" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'}
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


group = 'network.minter.android'
version = '1.0.0'

ext {
    minterMinSdk = 16
    minterMaxSdk = 30
    minterBuildTools = "30.0.2"
    minterCoreVers = "1.0.0"


    buildArtifactName = project.name
    buildArtifactVersion = version
    buildArtifactGroup = group

    pomName = "Minter Blockhain"
    pomUrl = "https://github.com/MinterTeam/minter-android-blockchain"
    pomScm = {
        connection = "scm:git:git://github.com/MinterTeam/minter-android-blockchain.git"
        url = pomUrl
    }
    pomInceptionYear = "2018"
    pomContributors = {}
    pomDescription = "Minter Android Blockchain API SDK"
    pomDevelopers = {
        developer {
            id = "edwardstock"
            name = "Eduard Maximovich"
            email = "edwatd.vstock@gmail.com"
            roles = ["maintainer"]
            timezone = "Europe/Moscow"
        }
    }
    pomLicenses = {
        license {
            name = "MIT License"
            url = "https://opensource.org/licenses/MIT"
            distribution = "repo"
        }
    }
}

def libPath = ""
if(hasProperty("nativeLibPath")) {
    libPath = getProperty("nativeLibPath")
}
println "Native lib path: ${libPath}"


android {
    compileSdkVersion minterMaxSdk
    buildToolsVersion minterBuildTools

    defaultConfig {
        minSdkVersion minterMinSdk
        targetSdkVersion minterMaxSdk

        versionCode 3
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    testOptions {
        unitTests {
            all {
                jvmArgs "-Djava.library.path=${libPath}"
            }
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    packagingOptions {
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    buildTypes {
        release {
            minifyEnabled true
            testCoverageEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            testCoverageEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"

    productFlavors {
        // can't use name starts with 'test'
        netMain {
            dimension "env"
            buildConfigField "String", "BASE_NODE_URL", '"https://minter-node.apps.minter.network/"'
            buildConfigField "String", "BASE_NODE_VERSION", '"v2"'
            buildConfigField "network.minter.blockchain.models.operational.BlockchainID", "BLOCKCHAIN_ID", "network.minter.blockchain.models.operational.BlockchainID.MainNet"
        }
        netTest {
            dimension "env"
            buildConfigField "String", "BASE_NODE_URL", '"https://node-api.testnet.minter.network/"'
            buildConfigField "String", "BASE_NODE_VERSION", '"v2"'
            buildConfigField "network.minter.blockchain.models.operational.BlockchainID", "BLOCKCHAIN_ID", "network.minter.blockchain.models.operational.BlockchainID.TestNet"
            buildConfigField "String", "QA_MNEMONIC", getProperty("minter_qa_mnemonic")
            buildConfigField "String", "TESTNET_MNEMONIC", getProperty("minter_testnet_mnemonic")
        }
    }

    libraryVariants.all { variant ->
        variant.buildConfigField "String", "VERSION_NAME", '"' + version + '"'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    netTestImplementation "network.minter.android:minter-android-core-testnet:${minterCoreVers}"
    netMainImplementation "network.minter.android:minter-android-core:${minterCoreVers}"

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    // network and rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'

    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    implementation 'org.parceler:parceler-api:1.1.13'
    annotationProcessor 'org.parceler:parceler:1.1.13'

    // stuff
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.google.guava:guava:26.0-android'
    implementation 'com.annimon:stream:1.2.1'

    // testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    androidTestImplementation 'com.google.code.gson:gson:2.8.6'
}

// Publishing
apply from: 'scripts/maven_publish.gradle'
